---
- name: Create application directory.
  ansible.builtin.file:
    path: "{{ application_path }}"
    state: directory

- name: Create application sub directories.
  ansible.builtin.file:
    path: "{{ application_path }}/{{ item }}"
    state: directory
  loop:
    - telegraf/config/
    - grafana/provisioning/dashboards/
    - grafana/provisioning/datasources/
    - influxdb
    - nginx/config/conf.d

- name: Create Dockerfiles.
  ansible.builtin.template:
    src: "{{ item }}/Dockerfile_tpl.j2"
    dest: "{{ application_path }}/{{ item }}/Dockerfile"
  loop:
    - nginx
    - grafana
    - influxdb
    - telegraf

- name: Create nginx configuration file.
  ansible.builtin.template:
    src: "nginx/reverse-proxy.conf.j2"
    dest: "{{ application_path }}/nginx/conf/conf.d/reverse-proxy.conf"

- name: Create telegraf configuration file.
  ansible.builtin.template:
    src: "telegraf/telegraf.conf.j2"
    dest: "{{ application_path }}/telegraf/config/telegraf.conf"

- name: Create grafana configuration.
  ansible.builtin.template:
    src: "influxdb/influxdb_ds.yml.j2"
    dest: "{{ application_path }}/grafana/provisioning/datasources/influxdb_ds.yml"

- name: Copy grafana dashboard configuration.
  ansible.builtin.file:
    src: "grafana/"
    dest: "{{ application_path }}/grafana/provisioning/dashboards/"

- name: Create docker-compose configuration.
  ansible.builtin.template:
    src: "docker-compose.yml.j2"
    dest: "{{ application_path }}/docker-compose.yml"

- name: Start application.
  community.docker.docker_compose:
    project_src: "{{ application_path }}"
    state: present